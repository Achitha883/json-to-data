{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: this.props.data,\n      columnData: this.props.data.columnHeaders,\n      rowData: this.props.data.rowData,\n      searchedTerm: ''\n    };\n\n    this.handleSearch = e => {\n      this.filterSearch(e.target.value);\n    };\n\n    this.filterSearch = term => {\n      this.setState({\n        SearchedTerm: term.trim().toLowerCase()\n      });\n\n      if (term.length > 2) {\n        this.setState({\n          rowData: this.state.rowData.filter(row => {\n            //console.log(row);\n            var flag = false;\n            row.data.map(key => {\n              console.log(key.value.match(term)); //flag = key.value.toLowerCase().match( term );\n\n              return true;\n            });\n            console.log(flag);\n            return true;\n          })\n        });\n      }\n    };\n\n    this.colClickHandler = (key, index) => {\n      this.setState({\n        rowData: this.state.rowData.sort((a, b) => {\n          const asc = true;\n\n          if (a.data[index].value < b.data[index].value) {\n            return asc ? -1 : 1;\n          } else if (a.data[index].value > b.data[index].value) {\n            return asc ? 1 : -1;\n          } else {\n            return 0;\n          }\n        })\n      });\n    };\n\n    this.getHeader = function () {\n      return this.state.columnData.map((colheaderData, index) => {\n        return React.createElement(\"th\", {\n          key: colheaderData.id,\n          id: colheaderData.id,\n          label: colheaderData.label,\n          \"data-sortable\": colheaderData.sortable,\n          \"data-filterable\": colheaderData.filterable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, colheaderData.label, colheaderData.sortable === \"true\" && React.createElement(\"button\", {\n          onClick: () => {\n            this.colClickHandler(colheaderData.id, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \" click\"));\n      });\n    };\n\n    this.getRowsData = function () {\n      return this.state.rowData.map(rowData => {\n        return React.createElement(\"tr\", {\n          key: rowData.id,\n          id: rowData.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, rowData.data.map(rowDataConf => {\n          return React.createElement(\"td\", {\n            key: rowDataConf.id,\n            label: rowDataConf.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, rowDataConf.value);\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleSearch,\n      placeholder: \"Type here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","Table","constructor","props","state","tableData","data","columnData","columnHeaders","rowData","searchedTerm","handleSearch","e","filterSearch","target","value","term","setState","SearchedTerm","trim","toLowerCase","length","filter","row","flag","map","key","console","log","match","colClickHandler","index","sort","a","b","asc","getHeader","colheaderData","id","label","sortable","filterable","getRowsData","rowDataConf","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n    state = {\n        tableData : this.props.data,\n        columnData : this.props.data.columnHeaders,\n        rowData : this.props.data.rowData,\n        searchedTerm : ''\n    }\n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n   \n    handleSearch = (e) => {\n       \n        this.filterSearch(e.target.value);\n    }\n\n    filterSearch = (term) => {\n        this.setState({\n            SearchedTerm : term.trim().toLowerCase() \n        });\n       if( term.length > 2){\n            this.setState({\n                rowData : this.state.rowData.filter((row) => {\n                    //console.log(row);\n                var flag =false; \n                 row.data.map((key) => {\n                     console.log(key.value.match( term ))\n                        //flag = key.value.toLowerCase().match( term );\n                        return true;\n                    })\n                    console.log(flag);\n                    return true;\n                })\n            })\n        }\n\n    \n    }\n    colClickHandler = (key,index) => {\n        this.setState({\n            rowData : this.state.rowData.sort((a, b) => {\n                const asc= true;\n                if (a.data[index].value < b.data[index].value) {\n                    return asc ? -1 : 1;\n                } else if (a.data[index].value > b.data[index].value) {\n                    return asc ? 1 : -1;\n                } else {\n                    return 0;\n                }\n            })  \n\n        });\n    }\n    \n    getHeader = function(){\n        return this.state.columnData.map((colheaderData,index) => {\n            return (\n                <th key={colheaderData.id} id={colheaderData.id} label={colheaderData.label}\n                    data-sortable={colheaderData.sortable}\n                    data-filterable={colheaderData.filterable}> \n                    {   colheaderData.label }\n                    {   colheaderData.sortable === \"true\" &&\n                        <button onClick = { () => { this.colClickHandler(colheaderData.id,index); } }> click\n                        </button> \n                    }\n                </th>\n            )\n        })\n\n        \n    }\n    \n    getRowsData = function(){\n        return this.state.rowData.map(rowData => {\n            return (\n                <tr key={rowData.id} id={rowData.id}>\n                    {rowData.data.map((rowDataConf) => {\n                        return(\n                            <td key={rowDataConf.id} label={rowDataConf.id}>\n                                {rowDataConf.value}\n                            </td>\n                        )\n                    })}\n                </tr>\n            )\n        })\n        \n    \n    }\n    render() {\n            \n            return (\n                <div className=\"container\">\n                    <input type=\"text\" onChange={this.handleSearch} placeholder=\"Type here\" />\n                    <table>\n                        <thead>\n                            <tr>{this.getHeader()}</tr>\n                        </thead>\n                        <tbody>\n                            {this.getRowsData()}\n                        </tbody>\n                    </table>\n                </div>\n            \n            );\n        }\n    }\n    \nexport default Table;\n"]},"metadata":{},"sourceType":"module"}