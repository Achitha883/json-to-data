{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\nimport * as tableJSON1 from \"../Assets/table-json.json\";\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableJSON: tableJSON1.default\n    };\n\n    this.colClickHandler = (filterable, sortable, id, indexIdentifier) => {\n      /*if(sortable){\n          let upDatedtableJSON;\n          upDatedRowSON = tableJSON.rowData.sort((a,b)=>{\n              return (a.data[indexIdentifier].value)-b.data[indexIdentifier].value\n          })\n          console.log(upDatedtableJSON);\n          \n          this.setState({\n              tableJSON : upDatedtableJSON\n          })\n      }*/\n    };\n  }\n\n  render() {\n    console.log(tableJSON1.default);\n    let tableheader = null,\n        tablerows = null;\n    tableheader = this.state.tableJSON.columnHeaders.map((colheaderData, ind) => {\n      return React.createElement(\"th\", {\n        key: colheaderData.id,\n        id: colheaderData.id,\n        label: colheaderData.label,\n        \"data-sortable\": colheaderData.sortable,\n        \"data-filterable\": colheaderData.filterable,\n        onClick: () => {\n          this.colClickHandler(colheaderData.filterable, colheaderData.sortable, colheaderData.id, ind);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, colheaderData.label);\n    });\n    tablerows = this.state.tableJSON.rowData.map(rowData => {\n      return React.createElement(\"tr\", {\n        key: rowData.id,\n        id: rowData.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, rowData.data.map(rowDataConf => {\n        return React.createElement(\"td\", {\n          key: rowDataConf.id,\n          label: rowDataConf.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, rowDataConf.value);\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"Table-wraper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, tableheader)), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, tablerows)));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","tableJSON1","Table","state","tableJSON","default","colClickHandler","filterable","sortable","id","indexIdentifier","render","console","log","tableheader","tablerows","columnHeaders","map","colheaderData","ind","label","rowData","data","rowDataConf","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;;AACA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACJC,MAAAA,SAAS,EAAGH,UAAU,CAACI;AADnB,KADkB;;AAAA,SAI1BC,eAJ0B,GAIR,CAACC,UAAD,EAAYC,QAAZ,EAAqBC,EAArB,EAAwBC,eAAxB,KAA4C;AAC1D;;;;;;;;;;;AAWH,KAhByB;AAAA;;AAiB1BC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAU,CAACI,OAAvB;AACA,QAAIS,WAAW,GAAG,IAAlB;AAAA,QAAwBC,SAAS,GAAG,IAApC;AAEAD,IAAAA,WAAW,GAAG,KAAKX,KAAL,CAAWC,SAAX,CAAqBY,aAArB,CAAmCC,GAAnC,CAAuC,CAACC,aAAD,EAAeC,GAAf,KAAuB;AACxE,aAEI;AAAI,QAAA,GAAG,EAAED,aAAa,CAACT,EAAvB;AAA2B,QAAA,EAAE,EAAES,aAAa,CAACT,EAA7C;AAAiD,QAAA,KAAK,EAAES,aAAa,CAACE,KAAtE;AACI,yBAAeF,aAAa,CAACV,QADjC;AAEI,2BAAiBU,aAAa,CAACX,UAFnC;AAE+C,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKD,eAAL,CAAqBY,aAAa,CAACX,UAAnC,EAA8CW,aAAa,CAACV,QAA5D,EAAqEU,aAAa,CAACT,EAAnF,EAAsFU,GAAtF;AAA2F,SAFxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKD,aAAa,CAACE,KAHnB,CAFJ;AAQH,KATa,CAAd;AAUAL,IAAAA,SAAS,GAAG,KAAKZ,KAAL,CAAWC,SAAX,CAAqBiB,OAArB,CAA6BJ,GAA7B,CAAiCI,OAAO,IAAI;AACpD,aACI;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACZ,EAAjB;AAAqB,QAAA,EAAE,EAAEY,OAAO,CAACZ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKY,OAAO,CAACC,IAAR,CAAaL,GAAb,CAAkBM,WAAD,IAAiB;AAC/B,eACI;AAAI,UAAA,GAAG,EAAEA,WAAW,CAACd,EAArB;AAAyB,UAAA,KAAK,EAAEc,WAAW,CAACd,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKc,WAAW,CAACC,KADjB,CADJ;AAKH,OANA,CADL,CADJ;AAWH,KAZW,CAAZ;AAcA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,WADL,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,SADL,CANJ,CADJ,CADJ;AAcH;;AA3DyB;;AA6D9B,eAAeb,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\nimport * as tableJSON1 from \"../Assets/table-json.json\";\nclass Table extends Component {\n    state = {\n        tableJSON : tableJSON1.default\n    }\n    colClickHandler = (filterable,sortable,id,indexIdentifier) => {\n        /*if(sortable){\n            let upDatedtableJSON;\n            upDatedRowSON = tableJSON.rowData.sort((a,b)=>{\n                return (a.data[indexIdentifier].value)-b.data[indexIdentifier].value\n            })\n            console.log(upDatedtableJSON);\n            \n            this.setState({\n                tableJSON : upDatedtableJSON\n            })\n        }*/\n    }\n    render() {\n        console.log(tableJSON1.default)\n        let tableheader = null, tablerows = null;\n        \n        tableheader = this.state.tableJSON.columnHeaders.map((colheaderData,ind) => {\n            return (\n              \n                <th key={colheaderData.id} id={colheaderData.id} label={colheaderData.label}\n                    data-sortable={colheaderData.sortable}\n                    data-filterable={colheaderData.filterable} onClick={()=>{this.colClickHandler(colheaderData.filterable,colheaderData.sortable,colheaderData.id,ind)}}> \n                    {colheaderData.label} \n                </th>\n            )\n        })\n        tablerows = this.state.tableJSON.rowData.map(rowData => {\n            return (\n                <tr key={rowData.id} id={rowData.id}>\n                    {rowData.data.map((rowDataConf) => {\n                        return(\n                            <td key={rowDataConf.id} label={rowDataConf.id}>\n                                {rowDataConf.value}\n                            </td>\n                        )\n                    })}\n                </tr>\n            )\n        })\n        \n        return (\n            <div className=\"Table-wraper\">\n                <table>\n                    <thead>\n                        <tr>\n                            {tableheader}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tablerows}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default Table;"]},"metadata":{},"sourceType":"module"}