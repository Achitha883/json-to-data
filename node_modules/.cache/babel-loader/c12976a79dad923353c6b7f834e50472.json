{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\nimport tableJSON from \"../Assets/table-json\";\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableJSON: tableJSON\n    };\n\n    this.colClickHandler = (filterable, sortable, id, indexIdentifier) => {\n      if (sortable) {\n        let upDatedtableJSON = tableJSON.rowData.sort((a, b) => {\n          return a.data[indexIdentifier].value - b.data[indexIdentifier].value;\n        });\n        this.setState({\n          tableJSON: upDatedtableJSON\n        });\n      }\n    };\n  }\n\n  render() {\n    let tableheader = null,\n        tablerows = null;\n    tableheader = this.state.tableJSON.columnHeaders.map((colheaderData, ind) => {\n      return React.createElement(\"th\", {\n        key: colheaderData.id,\n        id: colheaderData.id,\n        label: colheaderData.label,\n        \"data-sortable\": colheaderData.sortable,\n        \"data-filterable\": colheaderData.filterable,\n        onClick: () => {\n          this.colClickHandler(colheaderData.filterable, colheaderData.sortable, colheaderData.id, ind);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, colheaderData.label);\n    });\n    tablerows = this.state.tableJSON.rowData.map(rowData => {\n      return React.createElement(\"tr\", {\n        key: rowData.id,\n        id: rowData.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, rowData.data.map(rowDataConf => {\n        return React.createElement(\"td\", {\n          label: rowDataConf.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, rowDataConf.value);\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"Table-wraper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, tableheader), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, tablerows)));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","tableJSON","Table","state","colClickHandler","filterable","sortable","id","indexIdentifier","upDatedtableJSON","rowData","sort","a","b","data","value","setState","render","tableheader","tablerows","columnHeaders","map","colheaderData","ind","label","rowDataConf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AACA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACJF,MAAAA,SAAS,EAAGA;AADR,KADkB;;AAAA,SAI1BG,eAJ0B,GAIR,CAACC,UAAD,EAAYC,QAAZ,EAAqBC,EAArB,EAAwBC,eAAxB,KAA4C;AAC1D,UAAGF,QAAH,EAAY;AACT,YAAIG,gBAAgB,GAAGR,SAAS,CAACS,OAAV,CAAkBC,IAAlB,CAAuB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAChD,iBAAOD,CAAC,CAACE,IAAF,CAAON,eAAP,EAAwBO,KAAxB,GAA8BF,CAAC,CAACC,IAAF,CAAON,eAAP,EAAwBO,KAA7D;AACH,SAFqB,CAAvB;AAGC,aAAKC,QAAL,CAAc;AACVf,UAAAA,SAAS,EAAGQ;AADF,SAAd;AAGH;AACJ,KAbyB;AAAA;;AAc1BQ,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAW,GAAG,IAAlB;AAAA,QAAwBC,SAAS,GAAG,IAApC;AACAD,IAAAA,WAAW,GAAG,KAAKf,KAAL,CAAWF,SAAX,CAAqBmB,aAArB,CAAmCC,GAAnC,CAAuC,CAACC,aAAD,EAAeC,GAAf,KAAuB;AACxE,aACI;AAAI,QAAA,GAAG,EAAED,aAAa,CAACf,EAAvB;AAA2B,QAAA,EAAE,EAAEe,aAAa,CAACf,EAA7C;AAAiD,QAAA,KAAK,EAAEe,aAAa,CAACE,KAAtE;AACI,yBAAeF,aAAa,CAAChB,QADjC;AAEI,2BAAiBgB,aAAa,CAACjB,UAFnC;AAE+C,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKD,eAAL,CAAqBkB,aAAa,CAACjB,UAAnC,EAA8CiB,aAAa,CAAChB,QAA5D,EAAqEgB,aAAa,CAACf,EAAnF,EAAsFgB,GAAtF;AAA2F,SAFxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKD,aAAa,CAACE,KAHnB,CADJ;AAOH,KARa,CAAd;AASAL,IAAAA,SAAS,GAAG,KAAKhB,KAAL,CAAWF,SAAX,CAAqBS,OAArB,CAA6BW,GAA7B,CAAiCX,OAAO,IAAI;AACpD,aACI;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACH,EAAjB;AAAqB,QAAA,EAAE,EAAEG,OAAO,CAACH,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,OAAO,CAACI,IAAR,CAAaO,GAAb,CAAkBI,WAAD,IAAiB;AAC/B,eACI;AAAI,UAAA,KAAK,EAAEA,WAAW,CAAClB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKkB,WAAW,CAACV,KADjB,CADJ;AAKH,OANA,CADL,CADJ;AAWH,KAZW,CAAZ;AAcA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,WADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,SADL,CAJJ,CADJ,CADJ;AAYH;;AAnDyB;;AAqD9B,eAAejB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\nimport tableJSON from \"../Assets/table-json\"\nclass Table extends Component {\n    state = {\n        tableJSON : tableJSON\n    }\n    colClickHandler = (filterable,sortable,id,indexIdentifier) => {\n        if(sortable){\n           let upDatedtableJSON = tableJSON.rowData.sort((a,b)=>{\n                return a.data[indexIdentifier].value-b.data[indexIdentifier].value\n            })\n            this.setState({\n                tableJSON : upDatedtableJSON\n            })\n        }\n    }\n    render() {\n        let tableheader = null, tablerows = null;\n        tableheader = this.state.tableJSON.columnHeaders.map((colheaderData,ind) => {\n            return (\n                <th key={colheaderData.id} id={colheaderData.id} label={colheaderData.label}\n                    data-sortable={colheaderData.sortable}\n                    data-filterable={colheaderData.filterable} onClick={()=>{this.colClickHandler(colheaderData.filterable,colheaderData.sortable,colheaderData.id,ind)}}> \n                    {colheaderData.label} \n                </th>\n            )\n        })\n        tablerows = this.state.tableJSON.rowData.map(rowData => {\n            return (\n                <tr key={rowData.id} id={rowData.id}>\n                    {rowData.data.map((rowDataConf) => {\n                        return(\n                            <td label={rowDataConf.id}>\n                                {rowDataConf.value}\n                            </td>\n                        )\n                    })}\n                </tr>\n            )\n        })\n        \n        return (\n            <div className=\"Table-wraper\">\n                <table>\n                    <tr>\n                        {tableheader}\n                    </tr>\n                    <tbody>\n                        {tablerows}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default Table;"]},"metadata":{},"sourceType":"module"}