{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: null\n    };\n\n    this.colClickHandler = key => {\n      this.state.tableData.rowData = this.state.tableData.rowData.sort((a, b) => {\n        //const asc = this.state.directionSymbol[key] === 'asc';\n        const asc = false; //console.log(a);debugger;\n\n        if (a.data[3].value < b.data[3].value) {\n          return asc ? -1 : 1;\n        } else if (a.data[3].value > b.data[3].value) {\n          return asc ? 1 : -1;\n        } else {\n          return 0;\n        }\n      });\n      console.log(this.state.tableData);\n    };\n\n    this.getHeader = function () {\n      return this.state.tableData.columnHeaders.map((colheaderData, ind) => {\n        return React.createElement(\"th\", {\n          key: colheaderData.id,\n          id: colheaderData.id,\n          label: colheaderData.label,\n          \"data-sortable\": colheaderData.sortable,\n          \"data-filterable\": colheaderData.filterable,\n          onClick: () => {\n            this.colClickHandler(colheaderData.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, colheaderData.label);\n      });\n    };\n\n    this.getRowsData = function () {\n      return this.state.tableData.rowData.map(rowData => {\n        return React.createElement(\"tr\", {\n          key: rowData.id,\n          id: rowData.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, rowData.data.map(rowDataConf => {\n          return React.createElement(\"td\", {\n            key: rowDataConf.id,\n            label: rowDataConf.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, rowDataConf.value);\n        }));\n      });\n    };\n\n    this.tableData = props.data;\n    this.getHeader = this.getHeader.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","Table","constructor","props","state","tableData","colClickHandler","key","rowData","sort","a","b","asc","data","value","console","log","getHeader","columnHeaders","map","colheaderData","ind","id","label","sortable","filterable","getRowsData","rowDataConf","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n    state = {\n        tableData : null\n    }\n    \n    constructor(props){\n        \n        super(props);\n        this.tableData = props.data;\n        this.getHeader = this.getHeader.bind(this);\n        \n    }\n        \n    colClickHandler = (key) => {\n        \n        this.state.tableData.rowData = this.state.tableData.rowData.sort((a, b) => {\n            //const asc = this.state.directionSymbol[key] === 'asc';\n           const asc= false;\n           //console.log(a);debugger;\n            if (a.data[3].value < b.data[3].value) {\n                return asc ? -1 : 1;\n            } else if (a.data[3].value > b.data[3].value) {\n                return asc ? 1 : -1;\n            } else {\n                return 0;\n            }\n        })\n        console.log(this.state.tableData);\n\n    }\n    \n    getHeader = function(){\n        return this.state.tableData.columnHeaders.map((colheaderData,ind) => {\n            return (\n              \n                <th key={colheaderData.id} id={colheaderData.id} label={colheaderData.label}\n                    data-sortable={colheaderData.sortable}\n                    data-filterable={colheaderData.filterable} onClick={()=> { this.colClickHandler(colheaderData.id) }}> \n                    {colheaderData.label} \n                </th>\n            )\n        })\n\n        \n    }\n    \n    getRowsData = function(){\n        return this.state.tableData.rowData.map(rowData => {\n            return (\n                <tr key={rowData.id} id={rowData.id}>\n                    {rowData.data.map((rowDataConf) => {\n                        return(\n                            <td key={rowDataConf.id} label={rowDataConf.id}>\n                                {rowDataConf.value}\n                            </td>\n                        )\n                    })}\n                </tr>\n            )\n        })\n        \n    \n    }\n    render() {\n            return (\n                <div>\n                    <table>\n                        <thead>\n                            <tr>{this.getHeader()}</tr>\n                        </thead>\n                        <tbody>\n                            {this.getRowsData()}\n                        </tbody>\n                    </table>\n                </div>\n            \n            );\n        }\n    }\n    \nexport default Table;"]},"metadata":{},"sourceType":"module"}