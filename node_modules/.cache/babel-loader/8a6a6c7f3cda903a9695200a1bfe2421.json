{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: this.props.data,\n      columnData: this.props.data.columnHeaders,\n      rowData: this.props.data.rowData\n    };\n\n    this.handleSearch = e => {\n      this.filterSearch(e.target.value);\n    };\n\n    this.filterSearch = term => {\n      var tmp_term = term.toString();\n      this.setState({\n        rowData: this.state.tableData.rowData\n      });\n      term = term.toString().trim().toLowerCase();\n\n      if (term.length > 2) {\n        var filteredData = this.state.rowData.filter(rows => {\n          let flag = false;\n          rows.data.forEach(function (row) {\n            if (row.value.toString().trim().toLowerCase().match(term)) {\n              flag = true;\n            }\n          });\n\n          if (flag === true) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n        filteredData.map((rows, key1) => {\n          rows.data.map((row, key2) => {\n            filteredData[key1].data[key2].value = row.value.toString().replace(tmp_term, \"<span class='highlight'>\" + tmp_term + \"</span>\");\n            return true;\n          });\n          return true;\n        });\n        this.setState({\n          rowData: filteredData\n        });\n      }\n    };\n\n    this.getHeader = function () {\n      return this.state.columnData.map((colheaderData, index) => {\n        return React.createElement(\"th\", {\n          key: colheaderData.id,\n          id: colheaderData.id,\n          label: colheaderData.label,\n          \"data-sortable\": colheaderData.sortable,\n          \"data-filterable\": colheaderData.filterable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, colheaderData.label, colheaderData.sortable === \"true\" && React.createElement(\"button\", {\n          onClick: () => {\n            this.colClickHandler(colheaderData.id, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \" click\"));\n      });\n    };\n\n    this.getRowsData = function () {\n      return this.state.rowData.map(rowData => {\n        return React.createElement(\"tr\", {\n          key: rowData.id,\n          id: rowData.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, rowData.data.map(rowDataConf => {\n          return React.createElement(\"td\", {\n            key: rowDataConf.id,\n            label: rowDataConf.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, rowDataConf.value);\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleSearch,\n      placeholder: \"Search Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","Table","constructor","props","state","tableData","data","columnData","columnHeaders","rowData","handleSearch","e","filterSearch","target","value","term","tmp_term","toString","setState","trim","toLowerCase","length","filteredData","filter","rows","flag","forEach","row","match","map","key1","key2","replace","getHeader","colheaderData","index","id","label","sortable","filterable","colClickHandler","getRowsData","rowDataConf","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n    state = {\n        tableData : this.props.data,\n        columnData : this.props.data.columnHeaders,\n        rowData : this.props.data.rowData\n    }\n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n   \n    handleSearch = (e) => {\n       \n        this.filterSearch(e.target.value);\n    }\n\n    filterSearch = (term) => {\n        var tmp_term = term.toString();\n        this.setState({\n           rowData : this.state.tableData.rowData\n        });\n        term = term.toString().trim().toLowerCase();\n        \n       if( term.length > 2){\n            var filteredData = this.state.rowData.filter((rows) => {\n                let flag = false;\n                rows.data.forEach(function (row) {\n                    if(row.value.toString().trim().toLowerCase().match(term)){\n                        flag = true;\n                    }\n                });\n                if(flag===true){\n                    return true;\n                }  else{\n                    return false;\n                }\n            })\n            filteredData.map((rows,key1) => {\n                rows.data.map( (row,key2) => {\n                    filteredData[key1].data[key2].value = row.value.toString().replace(tmp_term ,\"<span class='highlight'>\"+tmp_term+\"</span>\")\n                    return true\n                    \n                })\n                return true;\n            })\n            this.setState({\n                rowData : filteredData\n            })\n        }\n\n    \n    }\n    \n    getHeader = function(){\n        return this.state.columnData.map((colheaderData,index) => {\n            return (\n                <th key={colheaderData.id} id={colheaderData.id} label={colheaderData.label}\n                    data-sortable={colheaderData.sortable}\n                    data-filterable={colheaderData.filterable}> \n                    {   colheaderData.label }\n                    {   colheaderData.sortable === \"true\" &&\n                        <button onClick = { () => { this.colClickHandler(colheaderData.id,index); } }> click\n                        </button> \n                    }\n                </th>\n            )\n        })\n\n        \n    }\n    \n    getRowsData = function(){\n        return this.state.rowData.map(rowData => {\n            return (\n                <tr key={rowData.id} id={rowData.id}>\n                    {rowData.data.map((rowDataConf) => {\n                        return(\n                            <td key={rowDataConf.id} label={rowDataConf.id}>\n                                { rowDataConf.value }\n                            </td>\n                        )\n                    })}\n                </tr>\n            )\n        })\n        \n    \n    }\n    render() {\n            \n            return (\n                <div className=\"container\">\n                    <input type=\"text\" onChange={this.handleSearch} placeholder= \"Search Here\" />\n                    <table>\n                        <thead>\n                            <tr>{this.getHeader()}</tr>\n                        </thead>\n                        <tbody>\n                            {this.getRowsData()}\n                        </tbody>\n                    </table>\n                </div>\n            \n            );\n        }\n    }\n    \nexport default Table;\n"]},"metadata":{},"sourceType":"module"}