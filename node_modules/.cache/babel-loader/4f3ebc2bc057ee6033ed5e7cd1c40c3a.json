{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getKeys = function () {\n      return Object.keys(this.props.data[0]);\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys();\n      return keys.map((key, index) => {\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, key.toUpperCase());\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.data;\n      var keys = this.getKeys();\n      return items.map((row, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(RenderRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }));\n      });\n    };\n\n    this.RenderRow = props => {\n      return props.keys.map((key, index) => {\n        return React.createElement(\"td\", {\n          key: props.data[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, props.data[key]);\n      });\n    };\n\n    this.colClickHandler = (key, data) => {\n      this.setState({\n        tableJSON: this.state.tableJSON.rowData.sort((a, b) => {\n          //const asc = this.state.directionSymbol[key] === 'asc';\n          const asc = true;\n\n          if (a[key] < b[key]) {\n            return asc ? -1 : 1;\n          } else if (a[key] > b[key]) {\n            return asc ? 1 : -1;\n          } else {\n            return 0;\n          }\n        })\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  }\n\n  /*if(sortable){\n      let upDatedtableJSON;\n      upDatedRowSON = tableJSON.rowData.sort((a,b)=>{\n          return (a.data[indexIdentifier].value)-b.data[indexIdentifier].value\n      })\n      console.log(upDatedtableJSON);\n      \n      this.setState({\n          tableJSON : upDatedtableJSON\n      })\n  }*/\n  //}\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","Table","constructor","props","getKeys","Object","keys","data","getHeader","map","key","index","toUpperCase","getRowsData","items","row","RenderRow","colClickHandler","setState","tableJSON","state","rowData","sort","a","b","asc","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n    \n    constructor(props){\n        \n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n    }\n        \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n    \n    }\n    \n    getHeader = function(){\n        var keys = this.getKeys();\n        return keys.map((key, index)=>{\n        return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n    \n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index)=>{\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n        })\n    \n    }\n    RenderRow = (props) =>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}>{props.data[key]}</td>\n        })\n     }\n    //colClickHandler = (filterable,sortable,id,indexIdentifier) => {\n        colClickHandler = (key,data) => {\n            this.setState({\n                tableJSON : this.state.tableJSON.rowData.sort((a, b) => {\n                    //const asc = this.state.directionSymbol[key] === 'asc';\n                    const asc= true;\n                    if (a[key] < b[key]) {\n                        return asc ? -1 : 1;\n                    } else if (a[key] > b[key]) {\n                        return asc ? 1 : -1;\n                    } else {\n                        return 0;\n                    }\n                }),\n\n                \n            })\n        }\n    \n        /*if(sortable){\n            let upDatedtableJSON;\n            upDatedRowSON = tableJSON.rowData.sort((a,b)=>{\n                return (a.data[indexIdentifier].value)-b.data[indexIdentifier].value\n            })\n            console.log(upDatedtableJSON);\n            \n            this.setState({\n                tableJSON : upDatedtableJSON\n            })\n        }*/\n    //}\n    render() {\n            return (\n                <div>\n                <table>\n                <thead>\n                <tr>{this.getHeader()}</tr>\n                </thead>\n                <tbody>\n                {this.getRowsData()}\n                </tbody>\n                </table>\n                </div>\n            \n            );\n        }\n    }\nexport default Table;"]},"metadata":{},"sourceType":"module"}