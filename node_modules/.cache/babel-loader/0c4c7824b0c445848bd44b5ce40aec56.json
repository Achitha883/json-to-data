{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: this.props.data,\n      columnData: this.props.data.columnHeaders,\n      rowData: this.props.data.rowData\n    };\n\n    this.colClickHandler = (key, index) => {\n      this.setState({\n        rowData: this.state.rowData.sort((a, b) => {\n          //const asc = this.state.directionSymbol[key] === 'asc';\n          const asc = true;\n          console.log(a);\n          debugger;\n\n          if (a.data[index].value < b.data[index].value) {\n            return asc ? -1 : 1;\n          } else if (a.data[index].value > b.data[index].value) {\n            return asc ? 1 : -1;\n          } else {\n            return 0;\n          }\n        })\n      });\n    };\n\n    this.getHeader = function () {\n      return this.state.columnData.map((colheaderData, index) => {\n        return React.createElement(\"th\", {\n          key: colheaderData.id,\n          id: colheaderData.id,\n          label: colheaderData.label,\n          \"data-sortable\": colheaderData.sortable,\n          \"data-filterable\": colheaderData.filterable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, colheaderData.label, colheaderData.sortable === \"true\" && React.createElement(\"button\", {\n          onClick: () => this.colClickHandler(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \" click\"));\n      });\n    };\n\n    this.getRowsData = function () {\n      return this.state.rowData.map(rowData => {\n        return React.createElement(\"tr\", {\n          key: rowData.id,\n          id: rowData.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, rowData.data.map(rowDataConf => {\n          return React.createElement(\"td\", {\n            key: rowDataConf.id,\n            label: rowDataConf.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, rowDataConf.value);\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","Table","constructor","props","state","tableData","data","columnData","columnHeaders","rowData","colClickHandler","key","index","setState","sort","a","b","asc","console","log","value","getHeader","map","colheaderData","id","label","sortable","filterable","getRowsData","rowDataConf","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n    state = {\n        tableData : this.props.data,\n        columnData : this.props.data.columnHeaders,\n        rowData : this.props.data.rowData\n    }\n    \n    constructor(props){\n        \n        super(props);\n        \n        this.getHeader = this.getHeader.bind(this);\n        \n    }\n        \n    colClickHandler = (key,index) => {\n        this.setState({\n\n            rowData : this.state.rowData.sort((a, b) => {\n                //const asc = this.state.directionSymbol[key] === 'asc';\n            const asc= true;\n            console.log(a);debugger;\n                if (a.data[index].value < b.data[index].value) {\n                    return asc ? -1 : 1;\n                } else if (a.data[index].value > b.data[index].value) {\n                    return asc ? 1 : -1;\n                } else {\n                    return 0;\n                }\n            })\n            \n\n        });\n    }\n    \n    getHeader = function(){\n        return this.state.columnData.map((colheaderData,index) => {\n            return (\n              \n                <th key={colheaderData.id} id={colheaderData.id} label={colheaderData.label}\n                    data-sortable={colheaderData.sortable}\n                    data-filterable={colheaderData.filterable}> \n                    {   colheaderData.label }\n                    {   colheaderData.sortable === \"true\" &&\n                        <button onClick = { () => this.colClickHandler(index) }> click\n                        </button> \n                    }\n                </th>\n            )\n        })\n\n        \n    }\n    \n    getRowsData = function(){\n        return this.state.rowData.map(rowData => {\n            return (\n                <tr key={rowData.id} id={rowData.id}>\n                    {rowData.data.map((rowDataConf) => {\n                        return(\n                            <td key={rowDataConf.id} label={rowDataConf.id}>\n                                {rowDataConf.value}\n                            </td>\n                        )\n                    })}\n                </tr>\n            )\n        })\n        \n    \n    }\n    render() {\n            return (\n                <div>\n                    <table>\n                        <thead>\n                            <tr>{this.getHeader()}</tr>\n                        </thead>\n                        <tbody>\n                            {this.getRowsData()}\n                        </tbody>\n                    </table>\n                </div>\n            \n            );\n        }\n    }\n    \nexport default Table;"]},"metadata":{},"sourceType":"module"}