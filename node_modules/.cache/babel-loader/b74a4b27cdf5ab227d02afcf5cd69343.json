{"ast":null,"code":"var _jsxFileName = \"/Applications/project1/json-to-table/src/Containers/Table.js\";\nimport React, { Component } from 'react';\nimport './Table.css';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: this.props.data,\n      columnData: this.props.data.columnHeaders,\n      rowData: this.props.data.rowData,\n      searchedTerm: ''\n    };\n\n    this.colClickHandler = (key, index) => {\n      this.setState({\n        rowData: this.state.rowData.sort((a, b) => {\n          const asc = true;\n\n          if (a.data[index].value < b.data[index].value) {\n            return asc ? -1 : 1;\n          } else if (a.data[index].value > b.data[index].value) {\n            return asc ? 1 : -1;\n          } else {\n            return 0;\n          }\n        })\n      });\n    };\n\n    this.handleSearch = e => {\n      this.filterSearch(e.target.value);\n    };\n\n    this.filterSearch = term => {\n      this.setState({\n        rowData: this.state.tableData.rowData,\n        searchedTerm: ''\n      });\n      term = term.toString().trim().toLowerCase();\n\n      if (term.length > 2) {\n        var filteredData = this.state.rowData.filter(rows => {\n          let flag = false;\n          var tmp_columnData = this.state.columnData;\n          rows.data.forEach(function (row) {\n            tmp_columnData.map(colheaderData => {\n              if (colheaderData.id === row.id && colheaderData.filterable === \"true\") if (row.value.toString().trim().toLowerCase().match(term)) {\n                flag = true;\n              }\n              return true;\n            });\n          });\n\n          if (flag === true) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n\n        if (filteredData.length === 0) {\n          filteredData = this.state.rowData;\n        }\n\n        this.setState({\n          rowData: filteredData,\n          searchedTerm: term\n        });\n      }\n    };\n\n    this.getHeader = function () {\n      return this.state.columnData.map((colheaderData, index) => {\n        return React.createElement(\"th\", {\n          key: colheaderData.id,\n          id: colheaderData.id,\n          label: colheaderData.label,\n          \"data-sortable\": colheaderData.sortable,\n          \"data-filterable\": colheaderData.filterable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, colheaderData.label, colheaderData.sortable === \"true\" && React.createElement(\"button\", {\n          onClick: () => {\n            this.colClickHandler(colheaderData.id, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"../Assests/sort-icon.png\",\n          height: \"30px\",\n          width: \"30px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })));\n      });\n    };\n\n    this.getRowsData = function () {\n      return this.state.rowData.map(rowData => {\n        return React.createElement(\"tr\", {\n          key: rowData.id,\n          id: rowData.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, rowData.data.map(rowDataConf => {\n          return React.createElement(\"td\", {\n            key: rowDataConf.id,\n            label: rowDataConf.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, this.state.searchedTerm.length > 2 && React.createElement(Highlighted, {\n            text: rowDataConf.value,\n            highlight: this.state.searchedTerm,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }), this.state.searchedTerm.length < 2 && React.createElement(Highlighted, {\n            text: rowDataConf.value,\n            highlight: this.state.searchedTerm,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }));\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Filter Text:\"), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"searchBox\",\n      onChange: this.handleSearch,\n      placeholder: \"Search Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.getRowsData())));\n  }\n\n}\n\nconst Highlighted = ({\n  text = '',\n  highlight = ''\n}) => {\n  var query = highlight;\n  var regex = new RegExp(\"(\" + query + \")\", \"gi\");\n  var name = text;\n  var parts = name.split(regex);\n  var result = text;\n\n  if (parts) {\n    if (parts.length === 3) {\n      result = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, parts[0], React.createElement(\"strong\", {\n        class: \"highLighter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, parts[1]), parts[2]);\n    }\n  }\n\n  return React.createElement(\"span\", {\n    class: \"rowValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, result);\n};\n\nexport default Table;","map":{"version":3,"sources":["/Applications/project1/json-to-table/src/Containers/Table.js"],"names":["React","Component","Table","constructor","props","state","tableData","data","columnData","columnHeaders","rowData","searchedTerm","colClickHandler","key","index","setState","sort","a","b","asc","value","handleSearch","e","filterSearch","target","term","toString","trim","toLowerCase","length","filteredData","filter","rows","flag","tmp_columnData","forEach","row","map","colheaderData","id","filterable","match","getHeader","label","sortable","getRowsData","rowDataConf","bind","render","Highlighted","text","highlight","query","regex","RegExp","name","parts","split","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;AAKA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAQ1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAPlBC,KAOkB,GAPV;AACJC,MAAAA,SAAS,EAAG,KAAKF,KAAL,CAAWG,IADnB;AAEJC,MAAAA,UAAU,EAAG,KAAKJ,KAAL,CAAWG,IAAX,CAAgBE,aAFzB;AAGJC,MAAAA,OAAO,EAAG,KAAKN,KAAL,CAAWG,IAAX,CAAgBG,OAHtB;AAIJC,MAAAA,YAAY,EAAG;AAJX,KAOU;;AAAA,SAMlBC,eANkB,GAMA,CAACC,GAAD,EAAKC,KAAL,KAAe;AAC7B,WAAKC,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAG,KAAKL,KAAL,CAAWK,OAAX,CAAmBM,IAAnB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxC,gBAAMC,GAAG,GAAE,IAAX;;AACA,cAAIF,CAAC,CAACV,IAAF,CAAOO,KAAP,EAAcM,KAAd,GAAsBF,CAAC,CAACX,IAAF,CAAOO,KAAP,EAAcM,KAAxC,EAA+C;AAC3C,mBAAOD,GAAG,GAAG,CAAC,CAAJ,GAAQ,CAAlB;AACH,WAFD,MAEO,IAAIF,CAAC,CAACV,IAAF,CAAOO,KAAP,EAAcM,KAAd,GAAsBF,CAAC,CAACX,IAAF,CAAOO,KAAP,EAAcM,KAAxC,EAA+C;AAClD,mBAAOD,GAAG,GAAG,CAAH,GAAO,CAAC,CAAlB;AACH,WAFM,MAEA;AACH,mBAAO,CAAP;AACH;AACJ,SATS;AADA,OAAd;AAaH,KApBiB;;AAAA,SAsBlBE,YAtBkB,GAsBFC,CAAD,IAAO;AAElB,WAAKC,YAAL,CAAkBD,CAAC,CAACE,MAAF,CAASJ,KAA3B;AACH,KAzBiB;;AAAA,SA2BlBG,YA3BkB,GA2BFE,IAAD,IAAU;AACtB,WAAKV,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAG,KAAKL,KAAL,CAAWC,SAAX,CAAqBI,OADrB;AAEVC,QAAAA,YAAY,EAAG;AAFL,OAAd;AAICc,MAAAA,IAAI,GAAGA,IAAI,CAACC,QAAL,GAAgBC,IAAhB,GAAuBC,WAAvB,EAAP;;AAED,UAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAoB;AACf,YAAIC,YAAY,GAAG,KAAKzB,KAAL,CAAWK,OAAX,CAAmBqB,MAAnB,CAA2BC,IAAD,IAAU;AACnD,cAAIC,IAAI,GAAG,KAAX;AACA,cAAIC,cAAc,GAAE,KAAK7B,KAAL,CAAWG,UAA/B;AACAwB,UAAAA,IAAI,CAACzB,IAAL,CAAU4B,OAAV,CAAkB,UAAUC,GAAV,EAAe;AAC7BF,YAAAA,cAAc,CAACG,GAAf,CAAoBC,aAAD,IAAmB;AAClC,kBAAGA,aAAa,CAACC,EAAd,KAAqBH,GAAG,CAACG,EAAzB,IAA+BD,aAAa,CAACE,UAAd,KAA6B,MAA/D,EACI,IAAGJ,GAAG,CAAChB,KAAJ,CAAUM,QAAV,GAAqBC,IAArB,GAA4BC,WAA5B,GAA0Ca,KAA1C,CAAgDhB,IAAhD,CAAH,EAAyD;AACrDQ,gBAAAA,IAAI,GAAG,IAAP;AACH;AACL,qBAAO,IAAP;AACH,aAND;AAOH,WARD;;AASA,cAAGA,IAAI,KAAG,IAAV,EAAe;AACX,mBAAO,IAAP;AACH,WAFD,MAEO;AACH,mBAAO,KAAP;AACH;AACJ,SAjBkB,CAAnB;;AAkBA,YAAGH,YAAY,CAACD,MAAb,KAAwB,CAA3B,EAA+B;AAC3BC,UAAAA,YAAY,GAAG,KAAKzB,KAAL,CAAWK,OAA1B;AACH;;AACD,aAAKK,QAAL,CAAc;AACVL,UAAAA,OAAO,EAAGoB,YADA;AAEVnB,UAAAA,YAAY,EAAGc;AAFL,SAAd;AAIH;AAGJ,KA/DiB;;AAAA,SAiElBiB,SAjEkB,GAiEN,YAAU;AAClB,aAAO,KAAKrC,KAAL,CAAWG,UAAX,CAAsB6B,GAAtB,CAA0B,CAACC,aAAD,EAAexB,KAAf,KAAyB;AACtD,eACI;AAAI,UAAA,GAAG,EAAEwB,aAAa,CAACC,EAAvB;AAA2B,UAAA,EAAE,EAAED,aAAa,CAACC,EAA7C;AAAiD,UAAA,KAAK,EAAED,aAAa,CAACK,KAAtE;AACI,2BAAeL,aAAa,CAACM,QADjC;AAEI,6BAAiBN,aAAa,CAACE,UAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGQF,aAAa,CAACK,KAHtB,EAIQL,aAAa,CAACM,QAAd,KAA2B,MAA3B,IACA;AAAQ,UAAA,OAAO,EAAK,MAAM;AAAE,iBAAKhC,eAAL,CAAqB0B,aAAa,CAACC,EAAnC,EAAsCzB,KAAtC;AAA+C,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAC,0BAAT;AAAoC,UAAA,MAAM,EAAC,MAA3C;AAAkD,UAAA,KAAK,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CALR,CADJ;AAYH,OAbM,CAAP;AAgBH,KAlFiB;;AAAA,SAoFlB+B,WApFkB,GAoFJ,YAAU;AACpB,aAAO,KAAKxC,KAAL,CAAWK,OAAX,CAAmB2B,GAAnB,CAAuB3B,OAAO,IAAI;AACrC,eACI;AAAI,UAAA,GAAG,EAAEA,OAAO,CAAC6B,EAAjB;AAAqB,UAAA,EAAE,EAAE7B,OAAO,CAAC6B,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK7B,OAAO,CAACH,IAAR,CAAa8B,GAAb,CAAkBS,WAAD,IAAiB;AAC/B,iBACI;AAAI,YAAA,GAAG,EAAEA,WAAW,CAACP,EAArB;AAAyB,YAAA,KAAK,EAAEO,WAAW,CAACP,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACM,KAAKlC,KAAL,CAAWM,YAAX,CAAwBkB,MAAxB,GAAiC,CAAjC,IACE,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAEiB,WAAW,CAAC1B,KAA/B;AAAsC,YAAA,SAAS,EAAE,KAAKf,KAAL,CAAWM,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAIM,KAAKN,KAAL,CAAWM,YAAX,CAAwBkB,MAAxB,GAAiC,CAAjC,IACE,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAEiB,WAAW,CAAC1B,KAA/B;AAAsC,YAAA,SAAS,EAAE,KAAKf,KAAL,CAAWM,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,CADJ;AAUH,SAXA,CADL,CADJ;AAgBH,OAjBM,CAAP;AAoBH,KAzGiB;;AAEd,SAAK+B,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAK1B,YAAL,GAAoB,KAAKA,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAsGDC,EAAAA,MAAM,GAAG;AAED,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,WAAzB;AAAqC,MAAA,QAAQ,EAAE,KAAK3B,YAApD;AAAkE,MAAA,WAAW,EAAE,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKqB,SAAL,EAAL,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKG,WAAL,EADL,CAJJ,CAHJ,CADJ;AAeH;;AAnIqB;;AAsI1B,MAAMI,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAI,GAAG,EAAR;AAAYC,EAAAA,SAAS,GAAG;AAAxB,CAAD,KAAiC;AAEjD,MAAIC,KAAK,GAAGD,SAAZ;AACA,MAAIE,KAAK,GAAG,IAAIC,MAAJ,CAAW,MAAMF,KAAN,GAAc,GAAzB,EAA8B,IAA9B,CAAZ;AACA,MAAIG,IAAI,GAAGL,IAAX;AACA,MAAIM,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAWJ,KAAX,CAAZ;AACA,MAAIK,MAAM,GAAGR,IAAb;;AACA,MAAIM,KAAJ,EAAW;AAEP,QAAIA,KAAK,CAAC3B,MAAN,KAAiB,CAArB,EAAwB;AACpB6B,MAAAA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,KAAK,CAAC,CAAD,CAAZ,EAAgB;AAAQ,QAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BA,KAAK,CAAC,CAAD,CAAlC,CAAhB,EAAgEA,KAAK,CAAC,CAAD,CAArE,CAAT;AACH;AACJ;;AAED,SAAO;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBE,MAAxB,CAAP;AACH,CAfD;;AAmBJ,eAAexD,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Table.css';\n\n   \n\n\nclass Table extends Component {\n    state = {\n        tableData : this.props.data,\n        columnData : this.props.data.columnHeaders,\n        rowData : this.props.data.rowData,\n        searchedTerm : ''\n    }\n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n    \n    colClickHandler = (key,index) => {\n        this.setState({\n            rowData : this.state.rowData.sort((a, b) => {\n                const asc= true;\n                if (a.data[index].value < b.data[index].value) {\n                    return asc ? -1 : 1;\n                } else if (a.data[index].value > b.data[index].value) {\n                    return asc ? 1 : -1;\n                } else {\n                    return 0;\n                }\n            })  \n\n        });\n    }\n    \n    handleSearch = (e) => {\n       \n        this.filterSearch(e.target.value);\n    }\n    \n    filterSearch = (term) => {\n       this.setState({\n           rowData : this.state.tableData.rowData,\n           searchedTerm : ''\n        });\n        term = term.toString().trim().toLowerCase();\n        \n       if( term.length > 2){\n            var filteredData = this.state.rowData.filter((rows) => {\n                let flag = false;\n                var tmp_columnData =this.state.columnData;\n                rows.data.forEach(function (row) {\n                    tmp_columnData.map((colheaderData) => {\n                        if(colheaderData.id === row.id && colheaderData.filterable === \"true\")\n                            if(row.value.toString().trim().toLowerCase().match(term)){\n                                flag = true;\n                            }\n                        return true;\n                    })\n                });\n                if(flag===true){\n                    return true;\n                }  else{\n                    return false;\n                }\n            })\n            if(filteredData.length === 0 ) {\n                filteredData = this.state.rowData;\n            }\n            this.setState({\n                rowData : filteredData,\n                searchedTerm : term\n            })\n        }\n\n    \n    }\n    \n    getHeader = function(){\n        return this.state.columnData.map((colheaderData,index) => {\n            return (\n                <th key={colheaderData.id} id={colheaderData.id} label={colheaderData.label}\n                    data-sortable={colheaderData.sortable}\n                    data-filterable={colheaderData.filterable}> \n                    {   colheaderData.label }\n                    {   colheaderData.sortable === \"true\" &&\n                        <button onClick = { () => { this.colClickHandler(colheaderData.id,index); } }> \n                            <img src=\"../Assests/sort-icon.png\" height=\"30px\" width=\"30px\"></img>\n                        </button> \n                    }\n                </th>\n            )\n        })\n\n        \n    }\n    \n    getRowsData = function(){\n        return this.state.rowData.map(rowData => {\n            return (\n                <tr key={rowData.id} id={rowData.id}>\n                    {rowData.data.map((rowDataConf) => {\n                        return(\n                            <td key={rowDataConf.id} label={rowDataConf.id}>\n                                { this.state.searchedTerm.length > 2 &&\n                                    <Highlighted text={rowDataConf.value} highlight={this.state.searchedTerm} /> \n                                }\n                                { this.state.searchedTerm.length < 2 &&\n                                    <Highlighted text={rowDataConf.value} highlight={this.state.searchedTerm} /> \n                                }\n                            </td>\n                        )\n                    })} \n                </tr>\n            )\n        })\n        \n    \n    }\n    render() {\n            \n            return (\n                <div className=\"container\">\n                    <label>Filter Text:</label>\n                    <input type=\"text\" class=\"searchBox\" onChange={this.handleSearch} placeholder= \"Search Here\" />\n                    <table>\n                        <thead>\n                            <tr>{this.getHeader()}</tr>\n                        </thead>\n                        <tbody>\n                            {this.getRowsData()}\n                        </tbody>\n                    </table>\n                </div>\n            \n            );\n        }\n    }\n\n    const Highlighted = ({text = '', highlight = ''}) => {\n\n        var query = highlight;\n        var regex = new RegExp(\"(\" + query + \")\", \"gi\");\n        var name = text;\n        var parts = name.split(regex);\n        var result = text;\n        if (parts) {\n            \n            if (parts.length === 3) {\n                result = <span>{parts[0]}<strong class=\"highLighter\">{parts[1]}</strong>{parts[2]}</span>\n            } \n        }\n\n        return <span class=\"rowValue\">{result}</span>;\n    }\n    \n\n    \nexport default Table;\n"]},"metadata":{},"sourceType":"module"}